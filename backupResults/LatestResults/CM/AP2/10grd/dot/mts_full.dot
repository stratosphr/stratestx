digraph g {

	rankdir="LR"

	__invisible__[shape="point", color="forestgreen"]
	q128[label=<<b>q<sub>128</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen", penwidth=3] // Initial
	q864[label=<<b>q<sub>864</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), (p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), (p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q64[label=<<b>q<sub>64</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), (p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q2[label=<<b>q<sub>2</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q130[label=<<b>q<sub>130</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q18[label=<<b>q<sub>18</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q144[label=<<b>q<sub>144</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q146[label=<<b>q<sub>146</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q812[label=<<b>q<sub>812</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), (p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), (p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q32[label=<<b>q<sub>32</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q33[label=<<b>q<sub>33</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), (p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q556[label=<<b>q<sub>556</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), (p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q44[label=<<b>q<sub>44</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), (p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft)))), ¬(p9 = and(Status=on[1], Balance &gt;= 50, AskCof=1, CofLeft &gt; 0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]

	__invisible__ -> q128[penwidth=3, color="forestgreen"]
	q128 -> q864[label=<powerUp>, color="forestgreen"]
	q864 -> q64[label=<autoOut>, color="forestgreen"]
	q64 -> q128[label=<powerDown>, color="forestgreen"]
	q64 -> q2[label=<powerDown>, color="forestgreen"]
	q2 -> q128[label=<addCof>, color="forestgreen"]
	q2 -> q130[label=<addCof>, color="forestgreen"]
	q130 -> q130[label=<addCof>, color="forestgreen"]
	q130 -> q128[label=<addCof>, color="forestgreen"]
	q130 -> q864[label=<powerUp>, color="forestgreen"]
	q64 -> q18[label=<powerDown>, color="forestgreen"]
	q18 -> q144[label=<addCof>, color="forestgreen"]
	q144 -> q864[label=<powerUp>, color="forestgreen"]
	q144 -> q128[label=<takePot>, color="forestgreen"]
	q18 -> q146[label=<addCof>, color="forestgreen"]
	q146 -> q146[label=<addCof>, color="forestgreen"]
	q146 -> q144[label=<addCof>, color="forestgreen"]
	q146 -> q864[label=<powerUp>, color="forestgreen"]
	q146 -> q130[label=<takePot>, color="forestgreen"]
	q18 -> q2[label=<takePot>, color="forestgreen"]
	q64 -> q130[label=<powerDown>, color="forestgreen"]
	q64 -> q144[label=<powerDown>, color="forestgreen"]
	q64 -> q146[label=<powerDown>, color="forestgreen"]
	q864 -> q812[label=<insert100>, color="forestgreen"]
	q812 -> q64[label=<autoOut>, color="forestgreen"]
	q812 -> q32[label=<changeReq>, color="forestgreen"]
	q32 -> q64[label=<autoOut>, color="forestgreen"]
	q32 -> q864[label=<backBalance>, color="forestgreen"]
	q812 -> q33[label=<cofReq>, color="forestgreen"]
	q33 -> q64[label=<autoOut>, color="forestgreen"]
	q33 -> q32[label=<serveCof>, color="forestgreen"]
	q33 -> q64[label=<serveCof>, color="forestgreen"]
	q33 -> q864[label=<serveCof>, color="forestgreen"]
	q812 -> q556[label=<insert100>, color="forestgreen"]
	q556 -> q64[label=<autoOut>, color="forestgreen"]
	q556 -> q32[label=<changeReq>, color="forestgreen"]
	q556 -> q33[label=<cofReq>, color="forestgreen"]
	q556 -> q44[label=<insert50>, color="forestgreen"]
	q44 -> q64[label=<autoOut>, color="forestgreen"]
	q44 -> q32[label=<changeReq>, color="forestgreen"]
	q44 -> q33[label=<cofReq>, color="forestgreen"]
	q44 -> q32[label=<cofReq>, color="forestgreen"]
	q556 -> q32[label=<cofReq>, color="forestgreen"]
	q812 -> q44[label=<insert100>, color="forestgreen"]
	q812 -> q812[label=<insert50>, color="forestgreen"]
	q812 -> q556[label=<insert50>, color="forestgreen"]
	q812 -> q32[label=<cofReq>, color="forestgreen"]
	q864 -> q812[label=<insert50>, color="forestgreen"]
	q864 -> q128[label=<powerDown>, color="forestgreen"]
	q864 -> q2[label=<powerDown>, color="forestgreen"]
	q864 -> q18[label=<powerDown>, color="forestgreen"]
	q864 -> q130[label=<powerDown>, color="forestgreen"]
	q864 -> q144[label=<powerDown>, color="forestgreen"]
	q864 -> q146[label=<powerDown>, color="forestgreen"]

}
