digraph g {

	rankdir="LR"

	__invisible__[shape="point", color="forestgreen"]
	q16[label=<<b>q<sub>16</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen", penwidth=3] // Initial
	q108[label=<<b>q<sub>108</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), (p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), (p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q8[label=<<b>q<sub>8</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), (p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q0[label=<<b>q<sub>0</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q2[label=<<b>q<sub>2</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q18[label=<<b>q<sub>18</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q101[label=<<b>q<sub>101</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), (p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q4[label=<<b>q<sub>4</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q5[label=<<b>q<sub>5</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q69[label=<<b>q<sub>69</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]

	__invisible__ -> q16[penwidth=3, color="forestgreen"]
	q16 -> q108[label=<powerUp>, color="forestgreen"]
	q108 -> q8[label=<autoOut>, color="forestgreen"]
	q8 -> q16[label=<powerDown>, color="forestgreen"]
	q8 -> q0[label=<powerDown>, color="forestgreen"]
	q0 -> q16[label=<addCof>, color="forestgreen"]
	q8 -> q2[label=<powerDown>, color="forestgreen"]
	q2 -> q18[label=<addCof>, color="forestgreen"]
	q18 -> q18[label=<addCof>, color="forestgreen"]
	q18 -> q108[label=<powerUp>, color="forestgreen"]
	q18 -> q16[label=<takePot>, color="forestgreen"]
	q2 -> q0[label=<takePot>, color="forestgreen"]
	q8 -> q18[label=<powerDown>, color="forestgreen"]
	q108 -> q101[label=<insert100>, color="forestgreen"]
	q101 -> q8[label=<autoOut>, color="forestgreen"]
	q101 -> q4[label=<changeReq>, color="forestgreen"]
	q4 -> q8[label=<autoOut>, color="forestgreen"]
	q4 -> q108[label=<backBalance>, color="forestgreen"]
	q4 -> q4[label=<serveCof>, color="forestgreen"]
	q4 -> q8[label=<serveCof>, color="forestgreen"]
	q4 -> q108[label=<serveCof>, color="forestgreen"]
	q101 -> q4[label=<cofReq>, color="forestgreen"]
	q101 -> q5[label=<insert100>, color="forestgreen"]
	q5 -> q8[label=<autoOut>, color="forestgreen"]
	q5 -> q4[label=<changeReq>, color="forestgreen"]
	q5 -> q4[label=<cofReq>, color="forestgreen"]
	q101 -> q69[label=<insert100>, color="forestgreen"]
	q69 -> q8[label=<autoOut>, color="forestgreen"]
	q69 -> q4[label=<changeReq>, color="forestgreen"]
	q69 -> q4[label=<cofReq>, color="forestgreen"]
	q69 -> q5[label=<insert50>, color="forestgreen"]
	q101 -> q69[label=<insert50>, color="forestgreen"]
	q101 -> q101[label=<insert50>, color="forestgreen"]
	q108 -> q101[label=<insert50>, color="forestgreen"]
	q108 -> q16[label=<powerDown>, color="forestgreen"]
	q108 -> q0[label=<powerDown>, color="forestgreen"]
	q108 -> q2[label=<powerDown>, color="forestgreen"]
	q108 -> q18[label=<powerDown>, color="forestgreen"]
	q16 -> q16[label=<addCof>, color="forestgreen"]

}
