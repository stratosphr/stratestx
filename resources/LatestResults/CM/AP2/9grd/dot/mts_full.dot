digraph g {

	rankdir="LR"

	__invisible__[shape="point", color="forestgreen"]
	q64[label=<<b>q<sub>64</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen", penwidth=3] // Initial
	q432[label=<<b>q<sub>432</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), (p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), (p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q32[label=<<b>q<sub>32</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), (p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q1[label=<<b>q<sub>1</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q65[label=<<b>q<sub>65</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q9[label=<<b>q<sub>9</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q72[label=<<b>q<sub>72</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q73[label=<<b>q<sub>73</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), (p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), ¬(p4 = Status=on[1]), (p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), (p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q406[label=<<b>q<sub>406</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), (p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), (p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q16[label=<<b>q<sub>16</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), ¬(p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), ¬(p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q22[label=<<b>q<sub>22</sub> = ¬(p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), (p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q278[label=<<b>q<sub>278</sub> = (p0 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 50))), ¬(p1 = and(Status=on[1], AskChange=0, AskCof=0, MaxBal &gt;= (Balance + 100))), ¬(p2 = and(Status=off[0], CofLeft &gt; 0, MaxPot &gt;= Pot)), ¬(p3 = or(and(Status=on[1], AskChange=0, AskCof=0, Balance=0), Status=error[2])), (p4 = Status=on[1]), ¬(p5 = and(Status=off[0], Pot &gt;= (MaxPot - 50))), (p6 = and(Status=on[1], Balance &gt;= 50, AskCof=0, AskChange=0)), (p7 = and(Status=on[1], Balance &gt; 0, AskCof=0, AskChange=0)), ¬(p8 = ∃(x).(and(and(x ∈ [1..MaxCof]), and(MaxCof &gt;= (CofLeft + x), Status=off[0], MaxCof &gt; CofLeft))))</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]

	__invisible__ -> q64[penwidth=3, color="forestgreen"]
	q64 -> q432[label=<powerUp>, color="forestgreen"]
	q432 -> q32[label=<autoOut>, color="forestgreen"]
	q32 -> q64[label=<powerDown>, color="forestgreen"]
	q32 -> q1[label=<powerDown>, color="forestgreen"]
	q1 -> q64[label=<addCof>, color="forestgreen"]
	q1 -> q65[label=<addCof>, color="forestgreen"]
	q65 -> q65[label=<addCof>, color="forestgreen"]
	q65 -> q64[label=<addCof>, color="forestgreen"]
	q65 -> q432[label=<powerUp>, color="forestgreen"]
	q32 -> q9[label=<powerDown>, color="forestgreen"]
	q9 -> q72[label=<addCof>, color="forestgreen"]
	q72 -> q432[label=<powerUp>, color="forestgreen"]
	q72 -> q64[label=<takePot>, color="forestgreen"]
	q9 -> q73[label=<addCof>, color="forestgreen"]
	q73 -> q73[label=<addCof>, color="forestgreen"]
	q73 -> q72[label=<addCof>, color="forestgreen"]
	q73 -> q432[label=<powerUp>, color="forestgreen"]
	q73 -> q65[label=<takePot>, color="forestgreen"]
	q9 -> q1[label=<takePot>, color="forestgreen"]
	q32 -> q65[label=<powerDown>, color="forestgreen"]
	q32 -> q72[label=<powerDown>, color="forestgreen"]
	q32 -> q73[label=<powerDown>, color="forestgreen"]
	q432 -> q406[label=<insert100>, color="forestgreen"]
	q406 -> q32[label=<autoOut>, color="forestgreen"]
	q406 -> q16[label=<changeReq>, color="forestgreen"]
	q16 -> q32[label=<autoOut>, color="forestgreen"]
	q16 -> q432[label=<backBalance>, color="forestgreen"]
	q16 -> q16[label=<serveCof>, color="forestgreen"]
	q16 -> q32[label=<serveCof>, color="forestgreen"]
	q16 -> q432[label=<serveCof>, color="forestgreen"]
	q406 -> q16[label=<cofReq>, color="forestgreen"]
	q406 -> q22[label=<insert100>, color="forestgreen"]
	q22 -> q32[label=<autoOut>, color="forestgreen"]
	q22 -> q16[label=<changeReq>, color="forestgreen"]
	q22 -> q16[label=<cofReq>, color="forestgreen"]
	q406 -> q278[label=<insert100>, color="forestgreen"]
	q278 -> q32[label=<autoOut>, color="forestgreen"]
	q278 -> q16[label=<changeReq>, color="forestgreen"]
	q278 -> q16[label=<cofReq>, color="forestgreen"]
	q278 -> q22[label=<insert50>, color="forestgreen"]
	q406 -> q278[label=<insert50>, color="forestgreen"]
	q406 -> q406[label=<insert50>, color="forestgreen"]
	q432 -> q406[label=<insert50>, color="forestgreen"]
	q432 -> q64[label=<powerDown>, color="forestgreen"]
	q432 -> q1[label=<powerDown>, color="forestgreen"]
	q432 -> q9[label=<powerDown>, color="forestgreen"]
	q432 -> q65[label=<powerDown>, color="forestgreen"]
	q432 -> q72[label=<powerDown>, color="forestgreen"]
	q432 -> q73[label=<powerDown>, color="forestgreen"]

}
