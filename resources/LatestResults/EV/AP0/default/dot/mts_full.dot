digraph g {

	rankdir="LR"

	__invisible__[shape="point", color="forestgreen"]
	q1[label=<<b>q<sub>1</sub> = ¬(Montee_Cabine = and(Pos &lt; LF, Pos &gt;= 0, PC=refermees[5], PE(Pos)=fermees[4], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[4], PC=fermees[4])), ¬(p0 = PC=ouvertes[3])</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen", penwidth=3] // Initial
	q0[label=<<b>q<sub>0</sub> = ¬(Montee_Cabine = and(Pos &lt; LF, Pos &gt;= 0, PC=refermees[5], PE(Pos)=fermees[4], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[4], PC=fermees[4])), ¬(p0 = PC=ouvertes[3])</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q4[label=<<b>q<sub>4</sub> = ¬(Montee_Cabine = and(Pos &lt; LF, Pos &gt;= 0, PC=refermees[5], PE(Pos)=fermees[4], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[4], PC=fermees[4])), (p0 = PC=ouvertes[3])</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]
	q2[label=<<b>q<sub>2</sub> = (Montee_Cabine = and(Pos &lt; LF, Pos &gt;= 0, PC=refermees[5], PE(Pos)=fermees[4], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[4], PC=fermees[4])), ¬(p0 = PC=ouvertes[3])</b>>, shape="box", style="rounded, filled", fillcolor="limegreen", color="forestgreen"]

	__invisible__ -> q1[penwidth=3, color="forestgreen"]
	q1 -> q1[label=<gAppel_Montee_Etage>, color="forestgreen"]
	q1 -> q1[label=<hAppel_Descente_Etage>, color="forestgreen"]
	q1 -> q1[label=<eAppel_Montee_Cabine>, color="forestgreen"]
	q1 -> q0[label=<aOuverture_Portes_Etage>, color="forestgreen"]
	q0 -> q0[label=<gAppel_Montee_Etage>, color="forestgreen"]
	q0 -> q0[label=<hAppel_Descente_Etage>, color="forestgreen"]
	q0 -> q0[label=<eAppel_Montee_Cabine>, color="forestgreen"]
	q0 -> q4[label=<bOuverture_Portes_Cabine>, color="forestgreen"]
	q4 -> q4[label=<gAppel_Montee_Etage>, color="forestgreen"]
	q4 -> q4[label=<hAppel_Descente_Etage>, color="forestgreen"]
	q4 -> q4[label=<eAppel_Montee_Cabine>, color="forestgreen"]
	q4 -> q0[label=<cFermeture_Portes_Cabine>, color="forestgreen"]
	q4 -> q4[label=<fAppel_Descente_Cabine>, color="forestgreen"]
	q0 -> q0[label=<dFermeture_Portes_Etage>, color="forestgreen"]
	q0 -> q2[label=<dFermeture_Portes_Etage>, color="forestgreen"]
	q2 -> q2[label=<gAppel_Montee_Etage>, color="forestgreen"]
	q2 -> q2[label=<hAppel_Descente_Etage>, color="forestgreen"]
	q2 -> q2[label=<eAppel_Montee_Cabine>, color="forestgreen"]
	q2 -> q1[label=<iMontee_Cabine>, color="forestgreen"]
	q2 -> q2[label=<fAppel_Descente_Cabine>, color="forestgreen"]
	q0 -> q2[label=<gAppel_Montee_Etage>, color="forestgreen"]
	q0 -> q2[label=<eAppel_Montee_Cabine>, color="forestgreen"]
	q0 -> q0[label=<fAppel_Descente_Cabine>, color="forestgreen"]
	q0 -> q0[label=<jChangement_Direction>, color="forestgreen"]
	q0 -> q1[label=<kDescente_Cabine>, color="forestgreen"]
	q0 -> q2[label=<jChangement_Direction>, color="forestgreen"]
	q1 -> q1[label=<fAppel_Descente_Cabine>, color="forestgreen"]

}
