Results for RCXP (in 00:00:18.650):

NB_EV: 15

AP: AP1

NB_AP: 3

NB_MAY: -1

NB_MUST_MINUS: -1

NB_MUST_PLUS: -1

NB_MUST_SHARP: -1

NB_AS: 4

NB_AS_RCHD: 4

TAU_AS: 100.00

NB_AT: 53

NB_AT_RCHD: 12

TAU_AT: 22.64

NB_EXPECTED_AS: 4

NB_EXPECTED_AS_RCHD: 4

TAU_EXPECTED_AS: 100.00

NB_EXPECTED_AT: 4

NB_EXPECTED_AT_RCHD: 4

TAU_EXPECTED_AT: 100.00

NB_CS: 153

NB_CS_RCHD: 56

NB_CT: 108

NB_CT_RCHD: 57

RHO_CS: 36.60

RHO_CT: 52.78

NB_TESTS: 4

NB_STEPS: 95

TESTS: 
c0q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP3 ]-> c36q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c36q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c104q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c104q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c106q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c106q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ CD1 ]-> c107q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c107q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c108q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c108q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c109q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c109q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c110q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c110q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c111q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c111q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c112q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c112q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c113q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c113q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c114q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c114q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c115q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c115q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c116q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c116q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c39q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c39q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c117q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c117q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c118q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1
c118q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c119q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1
c119q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c120q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1
c120q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ CD1 ]-> c121q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1
c121q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c122q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1
c122q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c123q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1
c123q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c124q2 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1
c124q2 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c125q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c125q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c126q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c126q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c127q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c127q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c1q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c1q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP3 ]-> c151q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=2, Pos(1)=2, Pos(2)=1, Pos(3)=1
############################################
c0q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c94q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c94q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ CD1 ]-> c128q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c128q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c129q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c129q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c130q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c130q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c131q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c131q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c132q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c132q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c133q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c133q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c134q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c134q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c135q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c135q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c136q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c136q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c137q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c137q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c138q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c138q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c139q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c139q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c140q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c140q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c141q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c141q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c142q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c142q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ CD1 ]-> c143q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c143q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c144q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c144q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c145q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c145q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c146q2 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c146q2 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c147q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c147q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c148q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c148q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c149q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c149q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c150q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c150q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP3 ]-> c1q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c1q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ AS2 ]-> c2q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=0, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=0, Pos(3)=1
############################################
c0q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c94q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c94q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ CD1 ]-> c128q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c128q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c129q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c129q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c130q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c130q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c131q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c131q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c132q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c132q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c133q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c133q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c134q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c134q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c135q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1
c135q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c136q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c136q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c137q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c137q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c138q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c138q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c139q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c139q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c140q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c140q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c141q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c141q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c142q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c142q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ CD1 ]-> c143q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c143q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c144q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c144q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c145q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c145q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c146q2 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1
c146q2 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=3, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c147q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c147q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c148q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c148q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c149q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c149q1 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c150q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1
c150q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ AS2 ]-> c152q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=0, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=2, Pos(2)=0, Pos(3)=1
############################################
c0q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP3 ]-> c104q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c104q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c106q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c106q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ CD1 ]-> c107q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c107q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c108q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c108q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c109q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c109q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c110q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
c110q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c111q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c111q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c112q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c112q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c113q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c113q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ DS1 ]-> c114q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1
c114q2 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=1, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=1, Pos(2)=1, Pos(3)=1 -[ AS1 ]-> c115q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c115q0 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c116q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c116q4 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c39q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1
c39q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=1, Pos(3)=1 -[ AS2 ]-> c40q1 = Dir(1)=1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=0, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=0, Pos(1)=2, Pos(2)=0, Pos(3)=1
############################################


SET_EXPECTED_AS: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_AS: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_EXPECTED_AS: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))


SET_EXPECTED_AT: 
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_AT: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP1 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_EXPECTED_AT: 
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))


SET_UNRCHD_AS: 



SET_UNRCHD_EXPECTED_AS: 



SET_UNRCHD_AT: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R)))))))


SET_UNRCHD_EXPECTED_AT: 



TIME_ATS: 00:00:18.650

TIME_TESTS: 00:00:00.007