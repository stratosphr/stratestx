Results for CXP (in 00:00:00.807):

NB_EV: 4

AP: AP0

NB_AP: 2

NB_MAY: -1

NB_MUST_MINUS: -1

NB_MUST_PLUS: -1

NB_MUST_SHARP: -1

NB_AS: 4

NB_AS_RCHD: 2

TAU_AS: 50.00

NB_AT: 11

NB_AT_RCHD: 6

TAU_AT: 54.55

NB_EXPECTED_AS: 4

NB_EXPECTED_AS_RCHD: 2

TAU_EXPECTED_AS: 50.00

NB_EXPECTED_AT: 2

NB_EXPECTED_AT_RCHD: 0

TAU_EXPECTED_AT: 0.00

NB_CS: 28

NB_CS_RCHD: 6

NB_CT: 17

NB_CT_RCHD: 6

RHO_CS: 21.43

RHO_CT: 35.29

NB_TESTS: 2

NB_STEPS: 9

TESTS: 
c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, h=1, sw=1 -[ Fail ]-> c1q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=1, sw=1
c1q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=1, sw=1 -[ Tic ]-> c8q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=0, sw=1
c8q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=0, sw=1 -[ Fail ]-> c18q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=2, bat(7)=2, h=0, sw=1
c18q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=2, bat(7)=2, h=0, sw=1 -[ Repair ]-> c23q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=2, bat(7)=3, h=0, sw=1
############################################
c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, h=1, sw=1 -[ Fail ]-> c1q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=1, sw=1
c1q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=1, sw=1 -[ Repair ]-> c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, h=1, sw=1
c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, h=1, sw=1 -[ Fail ]-> c1q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=1, sw=1
c1q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=1, sw=1 -[ Tic ]-> c8q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=0, sw=1
c8q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=0, sw=1 -[ Commute ]-> c15q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, h=1, sw=2
############################################


SET_EXPECTED_AS: 
q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_AS: 
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_EXPECTED_AS: 
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_EXPECTED_AT: 
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_AT: 
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Tic ]-> q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Commute ]-> q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_EXPECTED_AT: 



SET_UNRCHD_AS: 
q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_UNRCHD_EXPECTED_AS: 
q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_UNRCHD_AT: 
q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Tic ]-> q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_UNRCHD_EXPECTED_AT: 
q1 = ¬(p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q0 = ¬(p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = h=tic[0]), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q2 = (p0 = h=tic[0]), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


TIME_ATS: 00:00:00.807

TIME_TESTS: 00:00:00.002