Results for CXP (in 00:00:01.265):

NB_EV: 4

AP: AP2

NB_AP: 2

NB_MAY: -1

NB_MUST_MINUS: -1

NB_MUST_PLUS: -1

NB_MUST_SHARP: -1

NB_AS: 3

NB_AS_RCHD: 2

TAU_AS: 66.67

NB_AT: 11

NB_AT_RCHD: 6

TAU_AT: 54.55

NB_EXPECTED_AS: 3

NB_EXPECTED_AS_RCHD: 2

TAU_EXPECTED_AS: 66.67

NB_EXPECTED_AT: 2

NB_EXPECTED_AT_RCHD: 0

TAU_EXPECTED_AT: 0.00

NB_CS: 24

NB_CS_RCHD: 6

NB_CT: 16

NB_CT_RCHD: 6

RHO_CS: 25.00

RHO_CT: 37.50

NB_TESTS: 2

NB_STEPS: 7

TESTS: 
c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=3, h=1, sw=1 -[ Fail ]-> c3q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=2, h=1, sw=1
c3q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=2, h=1, sw=1 -[ Fail ]-> c9q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, bat(8)=2, h=1, sw=1
c9q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, bat(8)=2, h=1, sw=1 -[ Repair ]-> c14q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, bat(8)=3, h=1, sw=1
c14q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=2, bat(8)=3, h=1, sw=1 -[ Repair ]-> c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=3, h=1, sw=1
c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=3, h=1, sw=1 -[ Fail ]-> c3q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=2, h=1, sw=1
c3q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=2, h=1, sw=1 -[ Tic ]-> c19q3 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=2, h=0, sw=1
############################################
c0q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=3, h=1, sw=1 -[ Tic ]-> c6q1 = bat(1)=3, bat(2)=3, bat(3)=3, bat(4)=3, bat(5)=3, bat(6)=3, bat(7)=3, bat(8)=3, h=0, sw=1
############################################


SET_EXPECTED_AS: 
q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_AS: 
q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_EXPECTED_AS: 
q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_EXPECTED_AT: 
q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_AT: 
q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Tic ]-> q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Tic ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_RCHD_EXPECTED_AT: 



SET_UNRCHD_AS: 
q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_UNRCHD_EXPECTED_AS: 
q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_UNRCHD_AT: 
q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Commute ]-> q1 = ¬(p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Tic ]-> q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Commute ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


SET_UNRCHD_EXPECTED_AT: 
q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Repair ]-> q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))
q3 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), (p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3])))) -[ Fail ]-> q2 = (p0 = ∃(nb).(and(and(nb ∈ [1..n]), and(bat(nb)=ko[2])))), ¬(p1 = ∃(i, j).(and(and(i ∈ [1..n], j ∈ [1..n]), and(i ≠ j, bat(i)=ok[3], bat(j)=ok[3]))))


TIME_ATS: 00:00:01.265

TIME_TESTS: 00:00:00.004