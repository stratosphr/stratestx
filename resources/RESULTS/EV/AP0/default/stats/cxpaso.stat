Results for CXPASO (in 00:00:16.488):

NB_EV: 11

AP: AP0

NB_AP: 3

NB_MAY: -1

NB_MUST_MINUS: -1

NB_MUST_PLUS: -1

NB_MUST_SHARP: -1

NB_AS: 4

NB_AS_RCHD: 4

TAU_AS: 100.00

NB_AT: 27

NB_AT_RCHD: 20

TAU_AT: 74.07

NB_EXPECTED_AS: 4

NB_EXPECTED_AS_RCHD: 4

TAU_EXPECTED_AS: 100.00

NB_EXPECTED_AT: 1

NB_EXPECTED_AT_RCHD: 1

TAU_EXPECTED_AT: 100.00

NB_CS: 54

NB_CS_RCHD: 21

NB_CT: 41

NB_CT_RCHD: 20

RHO_CS: 38.89

RHO_CT: 48.78

NB_TESTS: 12

NB_STEPS: 44

TESTS: 
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ bOuverture_Portes_Cabine ]-> c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c10q4 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c10q4 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ gAppel_Montee_Etage ]-> c11q4 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=1, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c11q4 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=1, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ hAppel_Descente_Etage ]-> c12q4 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=1, BM(0)=1, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ gAppel_Montee_Etage ]-> c3q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=1, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ hAppel_Descente_Etage ]-> c4q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=1, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ gAppel_Montee_Etage ]-> c7q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=1, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ hAppel_Descente_Etage ]-> c8q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=1, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c6q0 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ bOuverture_Portes_Cabine ]-> c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ cFermeture_Portes_Cabine ]-> c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ dFermeture_Portes_Etage ]-> c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ gAppel_Montee_Etage ]-> c17q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=1, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ bOuverture_Portes_Cabine ]-> c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ cFermeture_Portes_Cabine ]-> c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ dFermeture_Portes_Etage ]-> c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ gAppel_Montee_Etage ]-> c15q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=1, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ bOuverture_Portes_Cabine ]-> c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ cFermeture_Portes_Cabine ]-> c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ dFermeture_Portes_Etage ]-> c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ hAppel_Descente_Etage ]-> c18q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=1, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ bOuverture_Portes_Cabine ]-> c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ cFermeture_Portes_Cabine ]-> c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ dFermeture_Portes_Etage ]-> c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ iMontee_Cabine ]-> c19q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=1
c19q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=1 -[ fAppel_Descente_Cabine ]-> c20q1 = BC(0)=1, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=1
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ aOuverture_Portes_Etage ]-> c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c1q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ bOuverture_Portes_Cabine ]-> c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c5q4 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=0, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ cFermeture_Portes_Cabine ]-> c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c9q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=0, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ dFermeture_Portes_Etage ]-> c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c13q0 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
c14q2 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c16q2 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=1, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=2, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################
c0q1 = BC(0)=0, BC(1)=0, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0 -[ eAppel_Montee_Cabine ]-> c2q1 = BC(0)=0, BC(1)=1, BC(2)=0, BC(3)=0, BD(0)=0, BD(1)=0, BD(2)=0, BD(3)=0, BM(0)=0, BM(1)=0, BM(2)=0, BM(3)=0, Dir=1, PC=1, PE(0)=1, PE(1)=1, PE(2)=1, PE(3)=1, Pos=0
############################################


SET_EXPECTED_AS: 
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])


SET_RCHD_AS: 
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])


SET_RCHD_EXPECTED_AS: 
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])


SET_EXPECTED_AT: 
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ iMontee_Cabine ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])


SET_RCHD_AT: 
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ bOuverture_Portes_Cabine ]-> q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ dFermeture_Portes_Etage ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ eAppel_Montee_Cabine ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ eAppel_Montee_Cabine ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ gAppel_Montee_Etage ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ gAppel_Montee_Etage ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ hAppel_Descente_Etage ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ aOuverture_Portes_Etage ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ eAppel_Montee_Cabine ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ fAppel_Descente_Cabine ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ gAppel_Montee_Etage ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ hAppel_Descente_Etage ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ eAppel_Montee_Cabine ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ gAppel_Montee_Etage ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ hAppel_Descente_Etage ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ iMontee_Cabine ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0]) -[ cFermeture_Portes_Cabine ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0]) -[ eAppel_Montee_Cabine ]-> q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0]) -[ gAppel_Montee_Etage ]-> q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0]) -[ hAppel_Descente_Etage ]-> q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])


SET_RCHD_EXPECTED_AT: 
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ iMontee_Cabine ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])


SET_UNRCHD_AS: 



SET_UNRCHD_EXPECTED_AS: 



SET_UNRCHD_AT: 
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ dFermeture_Portes_Etage ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ fAppel_Descente_Cabine ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ jChangement_Direction ]-> q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ jChangement_Direction ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q0 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ kDescente_Cabine ]-> q1 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), (Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0]) -[ fAppel_Descente_Cabine ]-> q2 = (Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), ¬(p0 = PC=ouvertes[0])
q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0]) -[ fAppel_Descente_Cabine ]-> q4 = ¬(Montee_Cabine = and(Pos < LF, Pos >= 0, PC=refermees[2], PE(Pos)=fermees[1], Dir=1, or(∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BM(etage)=1)), ∃(etage).(and(and(etage ∈ [(Pos + 1)..LF], ), , BC(etage)=1))))), ¬(Ouverture_Portes_Etage = and(PE(Pos)=fermees[1], PC=fermees[1])), (p0 = PC=ouvertes[0])


SET_UNRCHD_EXPECTED_AT: 



TIME_ATS: 00:00:16.488

TIME_TESTS: 00:00:00.002