Results for CXP (in 00:00:06.251):

NB_EV: 15

AP: AP0

NB_AP: 3

NB_MAY: -1

NB_MUST_MINUS: -1

NB_MUST_PLUS: -1

NB_MUST_SHARP: -1

NB_AS: 4

NB_AS_RCHD: 2

TAU_AS: 50.00

NB_AT: 53

NB_AT_RCHD: 4

TAU_AT: 7.55

NB_EXPECTED_AS: 4

NB_EXPECTED_AS_RCHD: 2

TAU_EXPECTED_AS: 50.00

NB_EXPECTED_AT: 5

NB_EXPECTED_AT_RCHD: 0

TAU_EXPECTED_AT: 0.00

NB_CS: 104

NB_CS_RCHD: 5

NB_CT: 57

NB_CT_RCHD: 4

RHO_CS: 4.81

RHO_CT: 7.02

NB_TESTS: 3

NB_STEPS: 5

TESTS: 
c0q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP3 ]-> c102q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
############################################
c0q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP1 ]-> c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
c31q4 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=0, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ FP1 ]-> c92q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=2, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1
############################################
c0q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=1, Pos(1)=0, Pos(2)=1, Pos(3)=1 -[ OP3 ]-> c36q0 = Dir(1)=-1, Dir(2)=-1, Dir(3)=-1, Mvt(1)=0, Mvt(2)=1, Mvt(3)=0, Portes(1)=1, Portes(2)=1, Portes(3)=0, Pos(1)=0, Pos(2)=1, Pos(3)=1
############################################


SET_EXPECTED_AS: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_AS: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_EXPECTED_AS: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_EXPECTED_AT: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_AT: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP1 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_RCHD_EXPECTED_AT: 



SET_UNRCHD_AS: 
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_UNRCHD_EXPECTED_AS: 
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_UNRCHD_AT: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP3 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP3 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ OP2 ]-> q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


SET_UNRCHD_EXPECTED_AT: 
q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ CD1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ AS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q0 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ DS1 ]-> q1 = ¬(p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), (p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))
q4 = (p0 = Portes(1)=ouvertes[0]), ¬(p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R))))))) -[ FP1 ]-> q2 = ¬(p0 = Portes(1)=ouvertes[0]), (p1 = ∃(R).(and(and(R ∈ Rames), and(R=1, Portes(R)=refermees[2], Mvt(R)=0, or(Pos(R) ≠ NS1, , Dir(R) ≠ 1), or(Pos(R) ≠ 0, , Dir(R) ≠ -1), ∀(R1).(and(R1 ∈ Rames) => R1 ≠ R => or(Pos(R1) ≠ Pos(R), , Dir(R1) ≠ Dir(R))))))), ¬(p2 = ∃(R).(and(and(R ∈ Rames), and(R=1, Mvt(R)=1, ∀(R1).(and(R1 ∈ [1..NR]) => and(R1 ≠ R) => or(Pos(R1) ≠ (Pos(R) + Dir(R)), , Dir(R1) ≠ Dir(R)))))))


TIME_ATS: 00:00:06.251

TIME_TESTS: 00:00:00.002